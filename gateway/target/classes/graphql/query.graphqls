scalar BigDecimal


type Query {
    customer(customerId: ID): CustomerDto
    customerDetails(emailAddress: String): CustomerDto
    getCountries: [CountryDto]
    getExchangeRates: [CurrencyDto]
    verifyInternetUserEmail(emailVerificationRequest: InternetEmailVerificationRequest):VTPassDataEmailVerificationResponse
    getWallets: [WalletDto]
    verifyResetPinCode(code: String): Response
    fetchCustomerOrdersBy(productId: String, customerId:String , status: String, orderId: String, productCategory: String, vendorId: String, page: Int, size: Int): OrderPagination
    getProductOrderStatsByCustomer (customerId: String): ProductOrderStatistics
    getProductByProductId(productId: String): ProductDto
    getProductsByVendorId(vendorId: String, page: Int, size: Int) : ProductPagination
    getAllProductsBy(productFilterRequest : ProductFilterRequest): ProductDtoPagination
    getAllProductLikes(pageRequest : ProductPageRequest): ProductDtoPagination
    getCart(pageRequest : ProductPageRequest): CartDtoPagination
    sumAmountByQuantityByCustomerId: BigDecimal

}

type ProductDtoPagination {
    page: Int
    size: Int
    total: Int
    data: [ProductDto!]
}

type CartDtoPagination {
    page: Int
    size: Int
    total: Int
    data: [CartDto!]
}


type ProductPagination {
    page: Int
    size: Int
    total: Int
    data: [ProductDto!]
}


type ProductOrderStatistics{
    allOrdersCount: Int
    processingOrdersCount:Int
    cancelledOrdersCount:Int
    failedOrdersCount:Int
    completedOrdersCount:Int
}

type OrderPagination {
    page: Int
    size: Int
    total: Int
    data: [Order]
}

type Order {
    orderId: String
    vendorId : String
    amount: Int
    status: String
    dateCreated: String
    currency: Currency
    customerId:String

}

type VTPassDataEmailVerificationResponse {
    customerName: String
    accounts: [Account]

}

type Account {
    accountId: String
    accountName: String
}

input InternetEmailVerificationRequest {
    emailAddress: String
    serviceId: String
}


type CountryDto {
    name: String
    countryCode: String
    currencyCode: String
}

type CurrencyDto {
    currencyCode: String
    currencyRate: BigDecimal
}

type Token {
    accessToken: String
    refreshToken: String
}


type CustomerDto {
    customerId: ID
    firstName: String
    lastName: String
    emailAddress: String
    username:String
    phoneNumber: String
    tier: String
    country: String
    hasPin: Boolean
    enablePush: Boolean
    profileImage:String

}

type WalletDto {
    walletId: String
    name: String
    currency: String
    balance: Float
    status: String
    isDefault: Boolean

}




